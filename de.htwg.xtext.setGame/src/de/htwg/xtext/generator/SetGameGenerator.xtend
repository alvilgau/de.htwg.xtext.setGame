/*
 * generated by Xtext 2.10.0
 */
package de.htwg.xtext.generator

import com.google.inject.Inject
import de.htwg.xtext.setGame.Option
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SetGameGenerator extends AbstractGenerator {

	@Inject IOptionGenerator optionGenerator;
	@Inject IOptionValueGenerator optionValueGenerator;
	@Inject OptionDaoGenerator optionDaoGenerator;
	@Inject OptionValueDaoGenerator optionValueDaoGenerator;
	@Inject CardOptionsGenerator cardOptionsGenerator;

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

		val pkgPrefix = "de/htwg/se/setgame/"
		fsa.generateFile(pkgPrefix + "model/" + optionGenerator.name(), optionGenerator.compile())
		fsa.generateFile(pkgPrefix + "model/" + optionValueGenerator.name(), optionValueGenerator.compile())
		fsa.generateFile(pkgPrefix + "util/persistence/" + optionDaoGenerator.name(), optionDaoGenerator.compile())
		fsa.generateFile(pkgPrefix + "util/persistence/" + optionValueDaoGenerator.name(),
			optionValueDaoGenerator.compile())

		val options = resource.allContents.filter(Option).toList
		fsa.generateFile(pkgPrefix + "controller/impl/" + cardOptionsGenerator.name(),
			cardOptionsGenerator.compile(options))

	}
}
